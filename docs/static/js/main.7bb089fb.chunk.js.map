{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","features/counter/Counter.js","Pages/State/State.js","Pages/Ant/Ant.js","Routes/Routes.js","Pages/Home/Home.js","Pages/Tree/Tree.js","Pages/Debug/Debug.js","Slices/StyleControlSlice.js","Pages/StyleControl/StyleControl.js","Components/StyleControlSwith/StyleControlSwith.js","Components/Header/Header.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","useSelector","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","button","onClick","textbox","onChange","e","target","asyncButton","getState","Component","componentSize","setComponentSize","type","HomeOutlined","SettingFilled","SmileOutlined","SyncOutlined","spin","rotate","LoadingOutlined","SmileTwoTone","HeartTwoTone","twoToneColor","CheckCircleTwoTone","labelCol","span","wrapperCol","layout","initialValues","size","onValuesChange","Item","label","Group","Button","Option","treeData","title","children","options","valuePropName","routes","sub","nm","icon","PartitionOutlined","url","BookOutlined","FileDoneOutlined","ApiOutlined","ExclamationOutlined","style","width","mode","defaultOpenKeys","map","item","index","key","SubMenu","subItem","subIndex","subKey","to","setCount","totalCount","setTC","sm","setSM","lm","setLM","lv","setLV","setData","cnt","dig","path","level","list","max","i","treeNode","push","compact","addonBefore","event","disabled","height","defaultExpandAll","location","useLocation","JSON","stringify","slice","on","off","styleControl","remember","autoComplete","defaultChecked","checked","id","findRoute","ret","length","f","fr","pathname","rts","About","App","src","alt","element","MenuUnfoldOutlined","PieChartOutlined","RocketOutlined","UserOutlined","UserSwitchOutlined","TeamOutlined","store","configureStore","reducer","counterReducer","StyleControlReducer","Boolean","window","hostname","match","ReactDOM","render","locale","ru_RU","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7bb089fb.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Counter } from '../../features/counter/Counter';\r\n\r\nexport default function Component(){\r\n    return (\r\n        <div>\r\n            \r\n            <Counter />\r\n        </div>\r\n        \r\n    )\r\n}","import { useState } from 'react';\r\nimport { Form,\r\n    Input,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Switch, } from 'antd';\r\nimport {\r\n    HomeOutlined,\r\n    SettingFilled,\r\n    SmileOutlined,\r\n    SyncOutlined,\r\n    LoadingOutlined, SmileTwoTone, HeartTwoTone, CheckCircleTwoTone\r\n} from '@ant-design/icons';\r\n\r\n// import locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nimport './Ant.css'\r\n\r\n\r\n\r\nexport default function Component() {\r\n    const [componentSize, setComponentSize] = useState('default');\r\n\r\n    const onFormLayoutChange = ({ size }) => {\r\n        setComponentSize(size);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\">Button</Button>\r\n            <div className=\"icons-list\">\r\n                <HomeOutlined />\r\n                <SettingFilled />\r\n                <SmileOutlined />\r\n                <SyncOutlined spin />\r\n                <SmileOutlined rotate={180} />\r\n                <LoadingOutlined />\r\n            </div>\r\n            <div className=\"icons-list\">\r\n                <SmileTwoTone />\r\n                <HeartTwoTone twoToneColor=\"#eb2f96\" />\r\n                <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\r\n            </div>\r\n            <Form\r\n                labelCol={{\r\n                    span: 4,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 14,\r\n                }}\r\n                layout=\"horizontal\"\r\n                initialValues={{\r\n                    size: componentSize,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n                size={componentSize}\r\n            >\r\n                <Form.Item label=\"Form Size\" name=\"size\">\r\n                    <Radio.Group>\r\n                        <Radio.Button value=\"small\">Small</Radio.Button>\r\n                        <Radio.Button value=\"default\">Default</Radio.Button>\r\n                        <Radio.Button value=\"large\">Large</Radio.Button>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item label=\"Input\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Select\">\r\n                    <Select>\r\n                        <Select.Option value=\"demo\">Demo</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"TreeSelect\">\r\n                    <TreeSelect\r\n                        treeData={[\r\n                            {\r\n                                title: 'Light',\r\n                                value: 'light',\r\n                                children: [\r\n                                    {\r\n                                        title: 'Bamboo',\r\n                                        value: 'bamboo',\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Cascader\">\r\n                    <Cascader\r\n                        options={[\r\n                            {\r\n                                value: 'zhejiang',\r\n                                label: 'Zhejiang',\r\n                                children: [\r\n                                    {\r\n                                        value: 'hangzhou',\r\n                                        label: 'Hangzhou',\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"DatePicker\">\r\n                    <DatePicker  />\r\n                </Form.Item>\r\n                <Form.Item label=\"InputNumber\">\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item label=\"Switch\" valuePropName=\"checked\">\r\n                    <Switch />\r\n                </Form.Item>\r\n                <Form.Item label=\"Button\">\r\n                    <Button>Button</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import { FileDoneOutlined, PartitionOutlined, BookOutlined, ApiOutlined, ExclamationOutlined, HomeOutlined } from '@ant-design/icons';\r\n\r\nconst routes =\r\n{\r\n    sub: [\r\n        {\r\n            nm: \"Функционал\",\r\n            icon: <PartitionOutlined />,\r\n            sub: [\r\n                { nm: \"Структура ПО\", url: \"/struct\" },\r\n                { nm: \"Покупное ПО\", url: \"/po\" },\r\n                { nm: \"Зоны ответственности\", url: \"/zone\" },\r\n                { nm: \"Интеграция с JIRA\", url: \"/jira\" }\r\n            ]\r\n        },\r\n        {\r\n            nm: \"Справочники\",\r\n            icon: <BookOutlined />,\r\n            sub: [\r\n                { nm: \"Типы документов\", url: \"/books/dt\" },\r\n                { nm: \"Типы носителей\", url: \"/books/mt\" },\r\n                { nm: \"Типы лицензий\", url: \"/books/ct\" },\r\n                { nm: \"Типы ПО\", url: \"/books/pt\" },\r\n                { nm: \"Проекты\", url: \"/books/projects\" },\r\n                { nm: \"Контрагенты\", url: \"/books/contr\" }\r\n            ]\r\n        },\r\n        {\r\n            nm: \"Отчеты\",\r\n            icon: <FileDoneOutlined />,\r\n            sub: [\r\n                { nm: \"Отчет компоненты ИАС\", url: \"/reports/components\" },\r\n                { nm: \"Отчет программный продукт\", url: \"/reports/product\" },\r\n                { nm: \"Отчет структура ИАС\", url: \"/reports/struct\" }\r\n            ]\r\n        },\r\n        {\r\n            nm: \"Технический раздел\",\r\n            icon: <ApiOutlined />,\r\n            sub: [\r\n                { nm: \"Состояние\", url: \"/tech/state\", icon: <ExclamationOutlined /> },\r\n                { nm: \"ANT Design\", url: \"/tech/ant\", icon: <ExclamationOutlined /> },\r\n                { nm: \"Стиль-контроль\", url: \"/tech/styleControl\" },\r\n                { nm: \"Дерево\", url: \"/tech/tree\", icon: <ExclamationOutlined /> },\r\n                { nm: \"Навигатор\", url: \"/\", icon: <HomeOutlined /> }\r\n            ]\r\n        }\r\n        \r\n    ]\r\n}\r\n\r\nexport const findRoute = (url, sub) => {\r\n\r\n    if (sub) {\r\n        sub.forEach(e => {\r\n            if (e.url == url) {\r\n                console.log(e.nm, e.url, url)\r\n                return e.nm\r\n            }\r\n            if(e.sub){\r\n                return findRoute(url, e.sub)\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default routes","import { Link } from \"react-router-dom\";\r\n\r\nimport { Menu } from 'antd';\r\n\r\nimport routes from '../../Routes/Routes'\r\n\r\nimport './Home.css'\r\n\r\nexport default function Component() {\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Menu style={{ width: \"100%\" }} mode=\"inline\" defaultOpenKeys={['root-0', 'root-1', 'root-2', 'root-3']} >\r\n        {\r\n          routes.sub.map((item, index) => {\r\n            const key = \"root-\" + index\r\n            if (item.sub) {\r\n              return (\r\n                <Menu.SubMenu key={key} icon={item.icon? item.icon : null} title={item.nm}>\r\n                  {\r\n                    item.sub.map((subItem, subIndex) => {\r\n                      const subKey = key + \"-\" + subIndex\r\n                      return (\r\n                        <Menu.Item key={subKey} icon={subItem.icon? subItem.icon : null} >\r\n                          <Link to={subItem.url ? subItem.url : \"/debug\"}>{subItem.nm}</Link>\r\n                        </Menu.Item>\r\n                      )\r\n                    })\r\n                  }\r\n                </Menu.SubMenu>\r\n              )\r\n            }\r\n            return <Menu.SubMenu key={key} icon={item.icon? item.icon : null} title={item.nm}></Menu.SubMenu>\r\n          })\r\n        }\r\n      </Menu>\r\n\r\n    </div>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Tree, Input } from 'antd';\r\nimport './Tree.css'\r\n\r\nexport default function Component() {\r\n    const [count, setCount] = useState(0);\r\n    const [totalCount, setTC] = useState(0);\r\n    const [sm, setSM] = useState(3);\r\n    const [lm, setLM] = useState(10001);\r\n    const [lv, setLV] = useState(2);\r\n    const [data, setData] = useState([]);\r\n    let cnt = 0\r\n    function dig(path = 'root', level = 2) {\r\n        const list = [];\r\n        let max = sm\r\n        if (level == 0) {\r\n            max = lm\r\n        }\r\n        for (let i = 0; i < max; i += 1) {\r\n            const key = `${path}-${i}`;\r\n            cnt++\r\n            const treeNode = {\r\n                title: `${key} level: ${level} total count: ${cnt}`,\r\n                key,\r\n            };\r\n            list.push(treeNode);\r\n            if (cnt > 100000) {\r\n                treeNode.title = \"Too much nodes!!!\"\r\n                setTC(cnt)\r\n                return list\r\n            }\r\n            if (level > 0) {\r\n                treeNode.children = dig(key, level - 1);\r\n            }\r\n\r\n            \r\n\r\n            \r\n\r\n\r\n        }\r\n        setTC(cnt)\r\n        return list;\r\n    }\r\n\r\n    //const treeData = dig();\r\n\r\n    return (\r\n        <div>\r\n            <Input.Group compact>\r\n                <Input addonBefore=\" &nbsp; Уровней:\" style={{ width: 'calc(150px)' }} value={lv} onChange={(event) => { setLV(event.target.value) }} />\r\n                <Input addonBefore=\" &nbsp; Маленькая ветка:\" style={{ width: 'calc(200px)' }} value={sm} onChange={(event) => { setSM(event.target.value) }} />\r\n                <Input addonBefore=\" &nbsp; Большая ветка:\" style={{ width: 'calc(300px)' }} value={lm} onChange={(event) => { setLM(event.target.value) }} />\r\n                <Input addonBefore=\" &nbsp; узлов:\" style={{ width: 'calc(150px)' }} value={totalCount} disabled  />\r\n                <Button type=\"primary\" onClick={() => { setData(dig(\"root\", lv)); setCount(count + 1); }}>Сгенерировать дерево # {count}</Button>\r\n            </Input.Group>\r\n\r\n            <div className=\"tree-box\">\r\n                <Tree treeData={data} height={555} defaultExpandAll={false}  />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { useLocation } from \"react-router-dom\";\r\n\r\n\r\nexport default function Component(){\r\n    let location = useLocation();\r\n    return (\r\n        <div>\r\n            debug : {JSON.stringify(location)}\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: false\r\n}\r\n\r\nexport const slice = createSlice({\r\n  name: 'styleControl',\r\n  initialState,\r\n  reducers: {\r\n    on: (state) => {\r\n      state.value = true\r\n    },\r\n    off: (state) => {\r\n      state.value = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const { on, off } = slice.actions\r\n\r\nexport default slice.reducer","import { useSelector, useDispatch } from 'react-redux'\r\nimport { on, off } from '../../Slices/StyleControlSlice'\r\nimport { Button, Switch, Form, Input, Checkbox } from 'antd';\r\n\r\nexport default function Component() {\r\n    const styleControl = useSelector((state) => state.styleControl.value)\r\n    const dispatch = useDispatch()\r\n    function onChange(checked) {\r\n        //console.log(`switch to ${checked}`);\r\n        if (checked) {\r\n            //console.log(`dispatch(on())`);\r\n            dispatch(on())\r\n        } else {\r\n            //console.log(`dispatch(off())`);\r\n            dispatch(off())\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Контроль зон комфорта\"\r\n                    name=\"styleSwitch\"\r\n                >\r\n                    <Switch defaultChecked={styleControl} onChange={onChange} />\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport default function Component() {\r\n    const styleControl = useSelector((state) => state.styleControl.value)\r\n    return (\r\n        <div className={styleControl ? 'on' : ''}>\r\n            <div id=\"m40\" className=\"style-control\">40px</div>\r\n            <div id=\"l-v\" className=\"style-control\"></div>\r\n            <div id=\"l-v-2\" className=\"style-control\"></div>\r\n            <div id=\"r-v\" className=\"style-control\"></div>\r\n            <div id=\"u-h\" className=\"style-control\"></div>\r\n            <div id=\"u-h-2\" className=\"style-control\"></div>\r\n            <div id=\"u-h-3\" className=\"style-control\"></div>\r\n        </div>\r\n    )\r\n}","import { useLocation } from \"react-router-dom\";\r\nimport rts from '../../Routes/Routes'\r\n\r\nfunction findRoute(url, sub) {\r\n    let ret\r\n    for(let i = 0; i < sub.length; i++) {\r\n        let item = sub[i]\r\n        //console.log(item)\r\n        if(item.url && item.url == url){\r\n            //console.log(\"find = \", item) \r\n            ret = item\r\n            break\r\n        }\r\n        if(item.sub){\r\n            let f = findRoute(url, item.sub)\r\n            if(f){\r\n                ret = f\r\n            }\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n\r\n\r\nexport default function Component() {\r\n    const location = useLocation();\r\n    let fr = findRoute(location.pathname, rts.sub);\r\n    //console.log(\"fr\", fr)\r\n    return (\r\n        <>\r\n            {/* <span>location : {location.pathname}</span> */}\r\n            {/* <span>routes : {JSON.stringify(rts)}</span> */}\r\n            {fr? fr.nm : \"\"}\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport './App.css';\n\nimport State from './Pages/State/State'\nimport Ant from './Pages/Ant/Ant'\nimport Home from './Pages/Home/Home'\nimport Tree from './Pages/Tree/Tree'\nimport Debug from './Pages/Debug/Debug'\nimport StyleControl from './Pages/StyleControl/StyleControl'\n\nimport StyleControlSwitch from './Components/StyleControlSwith/StyleControlSwith'\n\nimport Header from './Components/Header/Header'\n\nimport { UserOutlined, TeamOutlined, MenuUnfoldOutlined, PieChartOutlined, UserSwitchOutlined, RocketOutlined } from '@ant-design/icons';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <StyleControlSwitch />\n      <div id=\"box\">\n\n        <div id=\"up\">\n          <Link to=\"/\"><img src=\"logo.png\" alt=\"Application Logo\" /></Link>\n          <Link to=\"/\"><h2>АПД <span><Header /></span></h2></Link>\n\n        </div>\n\n        <div id=\"middle\">\n\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/tech/state\" element={<State />} />\n            <Route path=\"/tech/ant\" element={<Ant />} />\n            <Route path=\"/tech/tree\" element={<Tree />} />\n            <Route path=\"/debug\" element={<Debug />} />\n            <Route path=\"/tech/styleControl\" element={<StyleControl />} />\n            <Route path=\"/*\" element={<Debug />} />\n          </Routes>\n\n\n        </div>\n        <div id=\"bottom\">\n          <div className=\"bottom-col\">\n            <Link to=\"/\"><p> <MenuUnfoldOutlined /> Навигатор</p></Link>\n            <Link to=\"/tech/state\"><p><PieChartOutlined /> Состояние</p></Link>\n          </div>\n          <div className=\"bottom-col\">\n            <Link to=\"/tech/styleControl\"><p><RocketOutlined /> Стиль-контроль</p></Link>\n          </div>\n          <div className=\"bottom-col\">\n            <Link to=\"/\"><p><UserOutlined /> Administrator / <UserSwitchOutlined /> User name</p></Link>\n            <Link to=\"/\"><p><TeamOutlined /> User group name</p></Link>\n          </div>\n        </div>\n        <div id=\"bottom-2\">\n          &#169; БББ \"Архив Программной Документации\" 2021\n        </div>\n      </div>\n\n\n\n\n\n\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <>\n      <main>\n        <h2>About</h2>\n        <p>/about</p>\n      </main>\n    </>\n  );\n}\n\n\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport StyleControlReducer from '../Slices/StyleControlSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    styleControl: StyleControlReducer\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nimport { ConfigProvider } from 'antd';\nimport ru_RU from 'antd/lib/locale/ru_RU';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <ConfigProvider locale={ru_RU}>\n        <App />\n      </ConfigProvider>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1kMMr\",\"value\":\"Counter_value__2xzbi\",\"button\":\"Counter_button__1pPqX\",\"textbox\":\"Counter_textbox__3_0tp\",\"asyncButton\":\"Counter_asyncButton__2vX9_ Counter_button__1pPqX\"};"],"sourceRoot":""}